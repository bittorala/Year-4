var('x y z')
f = y^2*z-x^2*(x+z)
g = y^2-(x+y)*(x+z)
solve([f,g],x,y,z)
Rxz = matrix([[-x^3-x^2*z,0,z,0],[0,-x^3-x^2*z,0,z],[-x^2-x*z,-x-z,1,0],[0,-x^2-x*z,-x-z,1]])
r = Rxz.det()
r.factor()

#extended version
var('x y z')
f = y^2*z-x^2*(x+z)
g = y^2-(x+y)*(x+z)
solve([f,g],x,y,z)
Rxz = matrix([[-x^3-x^2*z,0,z,0],[0,-x^3-x^2*z,0,z],[-x^2-x*z,-x-z,1,0],[0,-x^2-x*z,-x-z,1]])
r = Rxz.det()
r.factor()
drdx = 6*x^5-5*x^4*z-20*x^3*z^2-9*x^2*z^3
drdz = -x^5-10*x^4*z-9*x^3*z^2
print(drdx(1,-1))
print(drdz(1,-1))
print(drdx(3,1))
print(drdz(3,1))
print(drdx(0,1))
print(drdz(0,1))
r.hessian()(0,1)

#TANGENTS
var('x y z')
f(x,y,z) = y^2*z-x^2*(x+z)
g(x,y,z) = y^2-(x+y)*(x+z)
tp0c1 = f.diff()(1,0,-1)
tp0c2 = g.diff()(1,0,-1)
tp1c1 = f.diff()(3,6,1)
tp1c2 = g.diff()(3,6,1)
tp2c1 = f.diff()(0,0,1)
tp2c2 = g.diff()(0,0,1)
print(tp0c1.dot_product(vector([0,1,0])))
print(tp0c2.dot_product(vector([0,1,0])))
print(tp1c1.dot_product(vector([0,1,0])))
print(tp1c2.dot_product(vector([0,1,0])))
print(tp2c1.dot_product(vector([0,1,0])))
print(tp2c2.dot_product(vector([0,1,0])))
